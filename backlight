#!/bin/sh
# backlight: simple backlight script for linux
#
# Copyright (c) 2022 Avalon Williams
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of
# this software and associated documentation files (the "Software"), to deal in
# the Software without restriction, including without limitation the rights to
# use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
# the Software, and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
# FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
# COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
# IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
# CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
# requires udev rule:
#	ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chgrp video /sys/class/backlight/%k/brightness"
#	ACTION=="add", SUBSYSTEM=="backlight", RUN+="/bin/chmod g+w /sys/class/backlight/%k/brightness"

usage() {
	echo "usage: backlight [get | set number]" 1>&2
	exit 1
}

[ $# -lt 1 ] && usage

: "${BACKLIGHT:=$(find /sys/class/backlight/ -depth | head -n1)}"

err() {
	echo "backlight: $1" 1>&2
	exit 1
}

percof() {
	echo "scale=2; ($1 / 100) * $2" | bc | cut -d. -f1
}

if [ "$BACKLIGHT" = "/sys/class/backlight/" ]; then
	err 'no backlight detected'
fi

bf=${BACKLIGHT}/brightness

b=$(cat "$bf")
mb=$(cat "${BACKLIGHT}/max_brightness")

case "$1" in
	get)
		echo "scale=2; ($b / $mb) * 100" | bc | cut -d. -f1
		;;
	set)
		[ -z "$2" ] && usage

		n=${2%\%}
		case ${n#[-+]} in *[!0-9]*|'') err "$n: not a number" ;; esac

		case "$n" in
			+*)
				n=$(percof "${n#+}" "$mb")
				n=$(echo "$b + $n" | bc)

				[ "$n" -gt "$mb" ] && exec echo "$mb" > "$bf"
				exec echo "$n" > "$bf"
				;;
			-*)
				n=$(percof "${n#-}" "$mb")
				n=$(echo "$b - $n" | bc)

				[ "$n" -lt 0 ] && exec echo 0 > "$bf"
				exec echo "$n" > "$bf"
				;;
			*)
				n=$(percof "$n" "$mb")
				exec echo "$n" > "$bf"
				;;
		esac

		;;
	*)
		usage
		;;
esac
